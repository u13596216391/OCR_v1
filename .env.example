# OCR 项目环境变量配置文件
# 复制此文件为 .env 并根据实际情况修改

# ============================================
# 数据库配置
# ============================================
POSTGRES_NAME=ocr_pipeline_db
POSTGRES_USER=test
POSTGRES_PASSWORD=test1234
POSTGRES_HOST=db
POSTGRES_PORT=5432

# ============================================
# Redis 配置
# ============================================
REDIS_HOST=redis

# ============================================
# 数据路径配置
# ============================================
LOCAL_DATA_PATH=/

# ============================================
# MinerU OCR 引擎配置
# ============================================
# 模型来源: modelscope (国内) 或 huggingface (国外)
MINERU_MODEL_SOURCE=modelscope

# ============================================
# Label Studio 集成配置
# ============================================
# Label Studio 服务地址（Docker 内部使用容器名）
LABEL_STUDIO_URL=http://label-studio:8081

# Label Studio API Token（必须配置！）
# 生成方式: Label Studio -> Account & Settings -> Access Token
LABEL_STUDIO_API_TOKEN=

# 默认项目 ID（可选，如果不设置则需要在 API 调用时指定）
LABEL_STUDIO_PROJECT_ID=

# ============================================
# 前端配置（使用 Nginx 反向代理时无需修改）
# ============================================
# API 基础 URL - 使用相对路径通过 Nginx 访问
# 默认值 /api 适用于通过 Nginx 访问
# 如果需要直接访问后端（调试用），可以改为 http://localhost:8010/api
VUE_APP_API_BASE_URL=/api

# ============================================
# GPU 配置（可选）
# ============================================
# 要启用 GPU 加速：
# 1. 安装 nvidia-docker: https://github.com/NVIDIA/nvidia-docker
# 2. 验证: docker run --rm --gpus all nvidia/cuda:11.8.0-base-ubuntu22.04 nvidia-smi
# 3. 在 docker-compose.yml 的 celery 服务中取消 deploy 部分的注释
# 4. 重启服务: docker-compose up -d --build

# 指定使用的 GPU 设备编号，多个设备用逗号分隔，如: 0,1
CUDA_VISIBLE_DEVICES=0

# NVIDIA Docker 配置（通常保持默认值）
NVIDIA_VISIBLE_DEVICES=all
NVIDIA_DRIVER_CAPABILITIES=compute,utility

# ============================================
# 其他配置
# ============================================
# Poppler 路径（PDF 转图片工具，通常容器内已安装）
POPPLER_PATH=
